package com.denizkaradal;
/*
Problem 2: Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence that do not exceed the nth term, find the sum of the even-valued terms.
*/

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        // write your code here
        System.out.println(fiboEvenSum(10));
        System.out.println(fiboEvenSum(18));
        System.out.println(fiboEvenSum(23));
        System.out.println(fiboEvenSum(43));
    }

    public static int fiboEvenSum(int number){
        int a;
        int b = 0;
        int c = 1;
        int sum = 0;

        for (int i = 0; i < number; i++) { // Finds fibonacci sequence
            a = b;
            b = c;
            c = a + b;

            if (c % 2 == 0)  // Check if it's even
                sum += c;
        }
        return sum;
    }
}